#!/bin/bash
# Check if user is root
if [[ $EUID -ne 0 ]]; then
    echo "You must be a root user to run this." 2>&1
    exit 1
fi
# Confirm if system is booted in efi mode
ls /sys/firmware/efi/efivars
echo
echo "Press 'Ctrl+c' to exit OR 'Enter' to continue"
read
# Update system clock
timedatectl set-ntp true
# List & Create Partitions
fdisk -l && echo && lsblk && echo
echo "cfdisk" && read && cfdisk
fdisk -l && echo && lsblk && echo
# Confirm disk partitions
echo "Press 'Ctrl+c' to exit OR 'Enter' to continue"
read
# Input values for: efi partition | root partition | bootloader id | hostname | username 
read -p "efipartition (/dev/sdax) = " efipartition
echo
read -p "ospartition (/dev/sdax) = " ospartition
echo
read -p "Enter your preferred bootloader-id: " bootloaderid
echo
read -p "Enter your hostname: " hostname
echo
read -p "Enter your preferred username: " username
echo
# Format efi partition as fat32
mkfs.fat -F32 $efipartition
echo
# Format root partition as ext4
mkfs.ext4 $ospartition
echo
# Mount root partition to /mnt
mount $ospartition /mnt
# Install the base and base-devel package groups using pacstrap
pacstrap /mnt base base-devel
echo
# Generate fstab
genfstab -U /mnt >> /mnt/etc/fstab
echo
cat /mnt/etc/fstab
echo
#-------------------------------------------------------------------
# Create chroot file: /root/arch/chroot OR /mnt/chroot
#-------------------------------------------------------------------
cat <<CHROOT > /mnt/chroot
#!/bin/bash
# Check if script is being run as root
if [[ $EUID -ne 0 ]]; then
    echo "Run this script as root." 2>&1
    exit 1
fi
# Set the timezone to US-Pacific
ln -sf /usr/share/zoneinfo/US/Pacific /etc/localtime
# Generate /etc/adjtime
hwclock --systohc --utc
# Uncomment locale
sed -i '/#en_US.UTF-8 UTF-8/s/^#//g' /etc/locale.gen
# Set the LANG variable
echo "LANG=en_US.UTF-8" > /etc/locale.conf
# Generate locale
locale-gen
echo
# Set hostname
echo $hostname > /etc/hostname
# Input root password
echo "Enter root password."
passwd
echo
# Create /boot/efi directory
mkdir /boot/efi
# Mount efi partition to the /boot/efi directory
mount $efipartition /boot/efi
echo
# Install some required packages for booting and stuff
yes "" | pacman -S --needed intel-ucode grub efibootmgr sudo networkmanager os-prober wget
echo
# Install grub to /boot/efi
grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=$bootloaderid
echo
# Change grub timeout to 0
sudo sed -i '4s/5/0/' /etc/default/grub
# Generate grub config file
sudo grub-mkconfig -o /boot/grub/grub.cfg
echo
# Enable network manager
systemctl enable NetworkManager
# Create user
useradd -m -g users -G wheel -s /bin/bash $username
echo
# Input user password
echo "Enter user password"
passwd $username
echo
# Set admin priviliges
echo "Uncommenting the wheel group line"
sudo sed -i '/# %wheel ALL=(ALL) ALL/s/^#//g' /etc/sudoers
# Exit chroot
exit
CHROOT
#-------------------------------------------------------------------
# Make /mnt/chroot executable
chmod +x /mnt/chroot
#
# Run /mnt/chroot
arch-chroot /mnt ./chroot
#
# Unmount all (some errors expected)
umount -a
#
# Remove github folder
rm -r /root/arch
#
# Reboot
reboot
